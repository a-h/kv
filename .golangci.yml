---
# golangci-lint configuration for kv project
# See https://golangci-lint.run/usage/configuration/ for reference

run:
  timeout: 5m
  tests: true
  modules-download-mode: readonly

output:
  sort-results: true

linters:
  enable:
    # Security linters
    - gosec        # Security analyzer
    - gocritic     # Go source code linter providing checks not implemented in other linters
    
    # Code quality linters
    - goimports    # Goimports does everything that gofmt does and fixes imports
    - govet        # Vet examines Go source code and reports suspicious constructs
    - ineffassign  # Detects when assignments to existing variables are not used
    - misspell     # Finds commonly misspelled English words in comments
    - unconvert    # Remove unnecessary type conversions
    - unparam      # Reports unused function parameters
    - unused       # Checks for unused constants, variables, functions and types
    
    # Style linters
    - gofmt        # Gofmt checks whether code was gofmt-ed
    - revive       # Fast, configurable, extensible, flexible, and beautiful linter for Go
    
    # Error handling
    - errcheck     # Errcheck is a program for checking for unchecked errors in go programs

linters-settings:
  gosec:
    # Enable all rules by default
    includes:
      - G101 # Look for hard coded credentials
      - G102 # Bind to all interfaces
      - G103 # Audit the use of unsafe block
      - G104 # Audit errors not checked
      - G106 # Audit the use of ssh.InsecureIgnoreHostKey
      - G107 # Url provided to HTTP request as taint input
      - G108 # Profiling endpoint automatically exposed on /debug/pprof
      - G109 # Potential Integer overflow made by strconv.Atoi result conversion to int16/32
      - G110 # Potential DoS vulnerability via decompression bomb
      - G201 # SQL query construction using format string
      - G202 # SQL query construction using string concatenation
      - G203 # Use of unescaped data in HTML templates
      - G204 # Audit use of command execution
      - G301 # Poor file permissions used when creating a directory
      - G302 # Poor file permissions used with chmod
      - G303 # Creating tempfile using a predictable path
      - G304 # File path provided as taint input
      - G305 # File traversal when extracting zip/tar archive
      - G306 # Poor file permissions used when writing to a new file
      - G307 # Deferring a method which returns an error
      - G401 # Detect the usage of DES, RC4, MD5 or SHA1
      - G402 # Look for bad TLS connection settings
      - G403 # Ensure minimum RSA key length of 2048 bits
      - G404 # Insecure random number source (rand)
      - G501 # Import blocklist: crypto/md5
      - G502 # Import blocklist: crypto/des
      - G503 # Import blocklist: crypto/rc4
      - G504 # Import blocklist: net/http/cgi
      - G505 # Import blocklist: crypto/sha1
      - G601 # Implicit memory aliasing of items from a range statement

  revive:
    rules:
      # Disable some rules that conflict with Go conventions used in this project
      - name: exported
        disabled: true
      - name: package-comments
        disabled: true

issues:
  exclude-rules:
    # Exclude gosec G104 (unchecked errors) for tests.
    - path: _test\.go
      linters:
        - gosec
      text: "(G104)|(G404):"
    - path: .*/benchmark_get\.go
      linters:
        - gosec
      text: "(G104)|(G404):"

    # Exclude some issues in test files
    - path: _test\.go
      linters:
        - errcheck
        - unparam
        - gocritic

  max-issues-per-linter: 0
  max-same-issues: 0
